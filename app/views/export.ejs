<%- include('header') %>

<script>

  function exportSelections() { //this function is triggered on the "Export Data" button.
    
    let template = '';
    let language = '';
    let testresult = "";
    let query = "";
    let thehref = "";

    let TchildCount = document.getElementById("pageChildren").children.length;
    let LchildCount = document.getElementById("langChildren").children.length;

    template = document.getElementById("pageChildren").children[0].id; // this takes the first child and puts it in 'template'
    template = template.slice(0, -1);

    for (var x = 1; x < TchildCount; x++) { // if there are additional children, we add a comma and the feature page for each child
      let t = document.getElementById("pageChildren").children[x].id;
      t = t.slice(0, -1);
      template = template + "," + t;
    }

    language = document.getElementById("langChildren").children[0].id; // this takes the first language child and puts it in 'language'
    language = language.slice(0, -1);

    for (var y = 1; y < LchildCount; y++) { // if additional languages were chosen, we add a comma and the language for each one selected
      let l = document.getElementById("langChildren").children[y].id;
      l = l.slice(0, -1);
      language = language + "," + l;
    }

    var testdate = document.getElementById("radialChild").children[0].id;
    testdate = testdate.slice(0, -1);
    // testdate = testdate.substring(0, testdate.indexOf(' | '))
    //console.log("the testdate is "+testdate);
    //console.log("/export?feature=" + template + "&language=" + language + "&testresult=" + testresult + "&query=" + query + "&testpassid=" + testdate);

    //the href will contain a list of each languages as 'en-us,de-de' and features will be 'f1,f3,f5' 
    // in the getExportFromResults() function on 'api_export.js' these commas are watched for, so that the string can be split to an array and a query created for all the selections

    //thehref="/export?feature="+ template + "&language=" + language + "&testresult=" + testresult + "&query=" + query + "&testpassid=" + testdate;
    thehref = "/export?feature=" + template + "&language=" + language + "&testresult=" + testresult + "&query=" + query + "&testpassid=" + testdate;
    document.getElementById("myhref").href = thehref;

    // location.reload(); //resets the export selection tool

  } // end exportSelections()


  // This function populates the languages and templates for display in the drop-down menus.
  function displayInfo(data, id){
    document.getElementById("testData").innerHTML = (data);
    document.getElementById("langButton").disabled = false;
    document.getElementById("mybutton").disabled = false;
    document.getElementById("runTest").disabled = false;
    var lkids = document.getElementById("langChildren");
    var pkids = document.getElementById("pageChildren");

    while (lkids.firstChild){
      lkids.removeChild(lkids.firstChild);
    }
    while (pkids.firstChild){
      pkids.removeChild(pkids.firstChild);
    }
    
    //clear out any content in the language and template dropdowns
    var langParent = document.getElementById("langList");
      while(langParent.hasChildNodes() && langParent.lastChild.id !="langAll"){
        langParent.removeChild(langParent.lastChild);
      }
    
    var templateParent = document.getElementById("featureUL");
      while(templateParent.hasChildNodes() && templateParent.lastChild.id !="tempAll"){
        templateParent.removeChild(templateParent.lastChild);
      }

    let exportObject = {
    "testPass": id
    }; 

    let object = JSON.stringify(exportObject);
    
    $.ajax({
        url: '/getTemplatesAndLangFromTestPass',
        type: 'POST',
        data: object,
        contentType: "application/json",
        error: function(data) {
        console.log(data);
        },
        success: function(data) {
          //console.log(data);

          // if the query was successful, populate the lang and template dropdowns with the results
          var theTemplates = data[0].Template.split(",");
          var theLanguages = data[0].Language.split(",");
          //console.log(theTemplates+"<---");
          //console.log(theLanguages +"<---");
          
          for (var x = 0; x<theLanguages.length; x++){
            var node = document.createElement("LI"); 
            node.setAttribute("class", "width-set dropdown-item");         

            var span = document.createElement("SPAN");
            span.setAttribute("id", "langParent-"+[x]);
            
            var langinputItem = document.createElement("input");
            langinputItem.setAttribute("class", "lang double");
            langinputItem.setAttribute("type", "checkbox");
            langinputItem.setAttribute("id", theLanguages[x]);
            langinputItem.setAttribute("onclick", "displayChecked(this.id, 'langList', 'LAll', 'langChildren', 'span')");
            
            var langtextnode = document.createTextNode("  " + theLanguages[x]);  
            node.appendChild(span);
            span.appendChild(langinputItem);
            span.appendChild(langtextnode);                         
            document.getElementById("langList").appendChild(node); 
          }

          for (var x = 0; x<theTemplates.length; x++){

            var node2 = document.createElement("LI");
            node2.setAttribute("class", "width-set dropdown-item");
            
            var span2 = document.createElement("SPAN");
            span2.setAttribute("id", "templateParent-"+[x]);

            var templateItem=document.createElement("input");
            templateItem.setAttribute("class", "FX double");
            templateItem.setAttribute("type", "checkbox");
            templateItem.setAttribute("id", theTemplates[x]);
            templateItem.setAttribute("onclick", "displayChecked(this.id, 'featureUL','All','pageChildren', 'span')");

            var thePage="";
            switch (theTemplates[x]){
              case "F1":
                thePage="(F1) Home Page";
                break;
              case "F2":
                thePage="(F2) Product Tabe of Contents";
                break;
              case "F3":
                thePage="(F3) Product Sub-Category";
                break;
              case "F4":
                thePage="(F4) Product Display";
                break;
              case "F5":
                thePage="(F5) HTML Page";
                break;
              case "F6":
                thePage="(F6)";
                break;
              case "F7":
                thePage="(F7) New Fluke Products";
                break;
              case "F8":
                thePage="(F8) Promotions and Contests TOC";
                break;
              case "F9":
                thePage="(F9) Article Table of Contents";
                break;
              case "F10":
                thePage="(F10) Webcard Table of Contents";
                break;
              case "F11":
                thePage="(F11) Webcard";
                break;
              case "F12":
                thePage="(F12) Fluke News Table of Contents";
                break;
              case "F13":
                thePage="(F13) Fluke News Sub-Category";
                break;
              case "F14":
                thePage="(F14) Article";
                break;
              case "F15":
                thePage="(F15) Tradeshows and Seminars";
                break;
              case "F16":
                thePage="(F16) Training Library";
                break;
              case "F17":
                thePage="(F17) Webinars";
                break;
              case "F18":
                thePage="(F18)";
                break;
              case "F19":
                thePage="(F19) Manuals";
                break;
              case "F20":
                thePage="(F20) Press Releases";
                break;
              case "F21":
                thePage="(F21) Safety Notices";
                break;
              case "F22":
                thePage="(F22) Software Downloads";
                break;
              case "F23":
                thePage="(F23) Where to Buy";
                break;
              case "F24":
                thePage="(F24) Link to Offsite Location";
                break;
              case "F25":
                thePage="(F25) Promotions and Contests Page";
                break;
              default:
                thePage="unknown";
            }

            var templateTextNode = document.createTextNode("  " + thePage);       
            node2.appendChild(span2);
            span2.appendChild(templateItem);
            span2.appendChild(templateTextNode);       
            document.getElementById("featureUL").appendChild(node2); 
          }

          console.log("I am a success.");
        }
    })


  }
</script>

<div id="loading" style="display: none;">
    <div id="loader-wrapper">
      <div id="loader"></div>
    </div><!--end of loader-wrapper-->
</div><!--end of loading-->

<div class="container-fluid" id="page">
  <div class="row">
    <div class="col-lg-4 offset-lg-4 text-center">
      <br /><br>
      <h1><%= title %></h1>

      <% if(typeof user == 'string' && user){ %>

      <h3>User is: <%= user %></h3>

      <% } %>
    </div><!-- end .col-sm-12 -->
  </div><!-- end .row -->

  <div class="row exportTool">
    <div class="col-lg-12">
      <p>Make your selections.<br />Next, click "Export Data".</p>
    </div><!-- end .col-sm-12 -->
  </div><!-- end .row -->

  
<!--  ------------------------------------------------------Date Drop Down Options ---------------------------- -->
<!-- ---------------------------the dates are populated by the getExport function on api_export.js ------------ -->
  <div class="row exportTool">
    <div class="col-sm-12 col-lg-6 offset-lg-3">
        <% if(dates){ %>
      <div class="button-group">
        <button type="button" style="border: 1px solid green;" class="btn btn-lg dropdown-toggle width-set export_results_dropdown" aria-haspopup="true" aria-expanded="false" data-toggle="dropdown" >Test Date</button>
        <ul class="dropdown-menu btn-block width-set export_results_dropdown" id="dateUL">
          <% for(var i=0; i < dates.length; i++) {
            //console.log(String(statusEndTime[i]));
            if (String(statusEndTime[i]) != "Fri Jan 02 1970 00:00:00 GMT-0800 (Pacific Standard Time)"){ %>
              <li class="dropdown-item radial">
              <span id="dateParent-<%=[i]%>">
                  <input id="<%= dateIds[i] %>" class="date double" value="<%=testDescription[i] %>" onclick="displayChecked(this.id, 'dateParent-<%=[i]%>', 'none', 'radialChild', 'span'); displayInfo(this.value, this.id);" type="radio" name="date" />&nbsp; <%= dates[i] %> | <%=testDescription[i] %></span>
              </li>
          <% }} %>
        </ul>
      </div><!-- end .button-group -->
      <% } %>
      <p id="testData"></p>
    </div><!-- end .col-sm-12 col-lg-6 offset-lg-3 -->
  </div><!-- end .row -->
  


<!--  ------------------------------------------------------Language / Locale Drop Down Options ---------------------------- -->
<!--  --------------------------------------languages and templates are populated with the displayInfo function above ------ -->
  <div class="row exportTool">
    <div class="col-sm-12 col-lg-6 offset-lg-3">
      <div class="button-group">
        <button type="button" id ="langButton" class="btn btn-lg dropdown-toggle width-set bottomSpace topSpace export_results_dropdown" data-toggle="dropdown" disabled >Language Locale <span class="caret"></span></button>
        <ul class="dropdown-menu btn-block width-set export_results_dropdown" id="langList">

          <!-- the 'ALL' option has to be available for the displaychecked.js funciton to work properly - set to style="display:none; if wanted" -->
          <li class="width-set dropdown-item" id="langAll"> 
            <span>
              <input id="LAll" class="lang double" onclick="displayChecked(this.id, 'langList', 'LAll', 'langChildren', 'span')" type="checkbox" />&nbsp; All
            </span>
          </li>
        </ul>
      </div><!-- end .button-group -->
    </div><!-- end .col-sm-12 col-lg-6 offset-lg-3 -->
  </div><!-- end .row -->


<!--  ------------------------------------------------------Feature/Template Drop Down Options ---------------------------- -->
  <div class="row exportTool">
    <div class="col-sm-12 col-lg-6 offset-lg-3">
      <div class="button-group">
        <button type="button" id="mybutton" class="btn btn-lg dropdown-toggle width-set bottomSpace export_results_dropdown" aria-haspopup="true" aria-expanded="false" data-toggle="dropdown" disabled>(FX) Page <span class="caret"></span></button>
        <ul class="dropdown-menu btn-block width-set export_results_dropdown" id="featureUL">

          <!-- the 'ALL' option has to be available for the displaychecked.js funciton to work properly - set to display:none;-->
          <li class="dropdown-item" id="tempAll">   
            <span>
              <input id="All" class="FX double" onclick="displayChecked(this.id, 'featureUL', 'All', 'pageChildren', 'span')" type="checkbox" />&nbsp; All
            </span>
          </li>
        </ul>
      </div><!-- end .button-group -->
    </div><!-- end .col-sm-12 col-lg-6 offset-lg-3 -->
  </div><!-- end .row -->


<!--  ------------------------------------------------------ Run Reports buttons ---------------------------- -->
    <div class="row exportTool">
      <div class="col-lg-12">
        <div class="button-group">
          <a id="myhref" download>
            <% //console.log("I'm just about to see the exportSelections function."); %>
            <button type="button" class="btn btn-lg width-set bottomSpace" id="runTest" onclick="exportSelections()" disabled><b>Export Data</b></button> 
            <!-- the exportSelections() function WAS in the "runTests.js" file but is now above, the api_export.js file has the database query -->
          </a><br>
          <!--<button type="button" class="btn btn-md" id="exportLanguageSet" onclick="exportLanguageSet()"><b>Export Language Set</b></button>&nbsp;-->


<!--------------------------- taking out the comprehensive report for now ----------------------- -->
          <!-- <a href="/export?feature=All&language=All&testresult=&query=&testpassid=All">
            <button type="button" class="btn btn-md btn-danger exportToolBtn" id="exportAll"><b>Build Comprehensive Report</b></button> 
            </a>
            <p style="color:red">Warning! This takes a while!</p> -->

        </div>
      </div><!-- end .col-lg-12 -->
    </div><!-- end .row -->


<!--  ------------------------------------------------------Display Section ---------------------------- -->
    <div class="col-lg-12 topSpace center">
      <h1>Export Data Selection:</h1>
    </div><!-- end .col-lg-12 -->
 
    <div class="container topSpace">
        <div class="row exportTool">

        <div class="col-md-4 col-lg-4 center" >
          <h3>Date Selection</h3>
          <div id="radialChild"></div>
        </div>
          
        <div class="col-md-4 col-lg-4 center">
          <h3>Languages</h3>
          <div id="langChildren"></div>
        </div><!-- end .col-md-5 .col-lg-6 -->

        <div class="col-md-4 col-lg-4 center">
          <h3>Templates</h3>
          <div id="pageChildren"></div>
        </div><!-- end .col-md-5 .col-lg-6 -->

      </div><!-- end .row -->
    </div>
    
</div><!-- end .container-fluid -->


<%- include('footer') %>
